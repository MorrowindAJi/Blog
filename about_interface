最近对接口的规范又有了新的认识
以前写接口都是不同接口放不同文件，这样的话一旦接口多起来，管理很不方便。比如登陆，可以是手机登陆，微信登陆，QQ登陆，微博登陆等等。你可以将它们写在一个页面里，
但是这样管理很不方便，你需要进行判断客户端传递过来的是哪种登陆方式，然后不同方式需要的数据也不同，这样会使得你的页面很臃肿，而且多了许多没必要的代码。
所以现在想办法整理在一起。

首先我们定义一个入口文件index.php，然后把需要加载的一些工具类：数据库类，页面类等include_once在里面。然后所有接口都从这个index.php进去，然后通过筛选跳到
逻辑处理文件里。
这个页面只获取2个参数（实际开发情况不一定），我们定为action和op（可以根据自己实际开发来定）。action指向的是逻辑处理文件的名称，如果action=login，那么指向login.php文件；而op
指向文件里的某个方法，如果op=loginByQQ，那么结合起来就可以看做——这个接口指向的是login.php文件里的loginByQQ方法。这样不管客户端需要调用哪个接口，都通过index.php
这个入口文件进行分开。然后在对应的文件里面在获取所需的参数就行了。

这样管理不仅美观，而且你暴露在外面的始终是一个index.php文件，这样使得外部攻击毫无办法，即便别人洞察了你写接口的方法，你只需要在接口文件开始处添加类似于
defined('DATA') or exit('Access Invalid!');这样的语句，就可以禁止外部不通过index.php入口文件的方法来访问你的逻辑处理文件

这样一来，比如不同的登陆方式，你可以在一个文件里面定义不同的方法来执行，大大美化了代码。

你还可以自己写一些配置文件，然后在index.php一起包含在里面，这样在不同的页面就都能访问你配置文件里面的参数和函数了

但是这样也有个弊端——比如类似于微信支付回调的文件 就不能这样包含，因为有defined('DATA') or exit('Access Invalid!');这样语句的约束，所以要根据实际情况进行修改
